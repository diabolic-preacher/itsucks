let me put out another one before it gets stale and is covered with and transformed to oldy moldy gunk like another recent post. This could be a rather shorter one given that I have found myself interested in another weekend thing to do on the computer that so far I have not just enjoyed doing but also slowly and patiently learning and overcoming the challenges in doing it. Long way to go still which makes all the coming weekends that much more ‘exciting’ to look forward to. 

I started with a simple silly idea to make a game of Snakes and Ladders (aka Ladders and Chutes...but I’m guessing our people don’t really pronounce ‘chutes’ that way as you might have heard), just for the heck of putting my focus into finishing a working version, no matter how crude or incomplete or perhaps completely nonsensical (but technically not illogical) it might be. Had a 3 day weekend once in November and got enough time to keep coming back to the task of making the working version till I could calm down and have clarity to get it done. It was the smallest yet significant of joys of conquering over own inertia.

Much like my other creative interest, poems, I thought I was "done" with the code, the app, the game once it ran and gave me the results as we would expect from a board game with finite moves and infinite need for luck. I might as well been, my awesome weekend could have been just that. "Look, you wanted an app, there you go. bye now". But then another experience was waiting to happen, waiting for a bit of courage from my end to trigger the effects. After all these years, I felt ready (after finding myself capable of writing code from scratch) to show my code to people online, starting of course with my friend circle in chat rooms and super helpful strangers on IRC.

The very first suggestion was something that got me learning not only a very new concept to me but also the very framework to practice it, which was exactly what I was looking for, to use at work. Given that it is my first app, the lack of experience totally showed when it was pointed out to me that I had no tests for my application. To oversimplify, tests, specifically unit tests,  are pieces of code that call bits of your app code to test that those bits work fine in order for the whole machinery, the whole app to work...at least, that’s hopefully the least correct thing I know about this concept. It is something the ‘developer’ adds to their own code instead of the QA to automate.

Not only was it not the smartest idea (the joy of having the courage to be a beginner again) to not have written tests but as per some code devlopment models like TDD (Test Driven Development), it was way worse, because unit tests can’t happen without callablle "units" or bits of code, and this started laying the plans for the coming weekends. Learning about writing tests, learning how to run them, and as my single blob of code got reorganized into discrete independent blocks of functionality, for the sake of writing tests, it made it even more clearer as to how the individuall parts can be further refined and even new blocks added with full confidence that the existing parts of the machine, the app are working fine and verified so. It is like breaking down big mathematical equations into smaller ones to solve and simplify, except I still know Python better than Greek even if I don’t know it or show it as good as the next person. Every coming weekend, I find time for this and I have no rush to get any #todos completed, except that I find myself more amicable to my plans to put my head and focus into.

The best bit about the experience, the one thing that gives me the confidence and courage to dare try something even if everything gets messed up is, "git". Git is a system to not only keep track of changes to the code I write but also a way to show/share them to the world for the wonderfully useful feedback I get to keep my weekends furthermore interesting and occupied meaningfully. 

Before closing, the things I picked up with this weekend hobby of mine are:
* Pytest - unit test runner
* Git - distributed version control
* Unit Tests - test cases for atomic bits of callable code
* Patience - that comes with having a little extra faith in myself
* Feedback - The fuel to keep my weekends going.